# Title: The square and circular cylinder impacted by the normal flow
#
# Description:
#

# below this depth the flow is considered "dry"
Define DRY 1e-5
Define GRAVITYCOEFF 9.81
Define CHANNELSLOPE 0.05011
Define NORMALDEPTH 0.00798
Define NORMALVELOCITY 1.038
Define CF (2.0*GRAVITYCOEFF*CHANNELSLOPE*NORMALDEPTH/pow(NORMALVELOCITY,2.0))
Define FROUDE (NORMALVELOCITY/pow((GRAVITYCOEFF*NORMALDEPTH),0.50))

# mesh adaptivity parameters
Define MAXLEVEL 9
Define MINLEVEL 5

54 53 GfsRiver GfsBox GfsGEdge {
    x = 0.5 y = 0.5
} {
    # define the inlet disturbance BC
    Global {
        // Parameters
        static double amplitude = 0.20;
        static double distPeriod = 0.933;

        // depth (p) wave-maker
        static double depth_bc(double t) {
            if (t<distPeriod/2.0) return (NORMALDEPTH*(1.0+amplitude*sin(2.0*M_PI*t/distPeriod)));
            else return (NORMALDEPTH);
        }

        // momentum (U) wave-maker
        static double velocity_bc(double t) {
            if (t<distPeriod/2.0) return (FROUDE*pow((GRAVITYCOEFF*pow((NORMALDEPTH*(1.0+amplitude*sin(2.0*M_PI*t/distPeriod))),3.0)),0.50));
            else return (NORMALVELOCITY*NORMALDEPTH);
        }

    }

    Time { end = 112.0 }

    PhysicalParams { L = 3.0 g = 9.81 }

    # We use a sphere knowing that in 2D the resulting object will be
    # a cross-section of the sphere at z = 0 i.e. a cylinder of radius
    # 0.5
    Solid (cube(160.30,1.50,0.,0.6))
    # Solid (sphere(160.30,1.50,0.0,0.3))
    # Solid ({
    #     double k1 = KSLOPE(TP1X,TP2X,TP1Y,TP2Y);
    #     double k2 = KSLOPE(TP1X,TP3X,TP1Y,TP3Y);
    #     double b1 = BINTERCEPT(TP1X,TP2X,TP1Y,TP2Y);
    #     double b2 = BINTERCEPT(TP1X,TP3X,TP1Y,TP3Y);
    #     double line1 = - (k1*x - y + b1);
	#     double line2 = (k2*x - y + b2);
    #     double line3 = x - RIGHTCOORD;
    #     return intersection (intersection (line1, line2), line3);
    # })

    RefineSolid 9

    Init {} {
        # Initial normal flow
	    P = NORMALDEPTH
	    U = NORMALDEPTH*NORMALVELOCITY
        V = 0.0

	    # PPrev = P
        # UMed = U
        # VMed = V
    }

    Init { istep = 1 } {
	# RK 10-4 TVD by Ketcheson
	UMed1 = U
	UMed2 = U
	VMed1 = V
	VMed2 = V

    # first 5 stages
    UMed1 = (P > DRY ? UMed1 + (1.0/6.0) * dt * (GRAVITYCOEFF * CHANNELSLOPE * P - 0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*UMed1/pow(P,2.0)) : 0.)
	VMed1 = (P > DRY ? VMed1 + (1.0/6.0) * dt * (-0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*VMed1/pow(P,2.0)) :0.)

	UMed1 = (P > DRY ? UMed1 + (1.0/6.0) * dt * (GRAVITYCOEFF * CHANNELSLOPE * P - 0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*UMed1/pow(P,2.0)) : 0.)
	VMed1 = (P > DRY ? VMed1 + (1.0/6.0) * dt * (-0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*VMed1/pow(P,2.0)) :0.)

	UMed1 = (P > DRY ? UMed1 + (1.0/6.0) * dt * (GRAVITYCOEFF * CHANNELSLOPE * P - 0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*UMed1/pow(P,2.0)) : 0.)
	VMed1 = (P > DRY ? VMed1 + (1.0/6.0) * dt * (-0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*VMed1/pow(P,2.0)) :0.)

	UMed1 = (P > DRY ? UMed1 + (1.0/6.0) * dt * (GRAVITYCOEFF * CHANNELSLOPE * P - 0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*UMed1/pow(P,2.0)) : 0.)
	VMed1 = (P > DRY ? VMed1 + (1.0/6.0) * dt * (-0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*VMed1/pow(P,2.0)) :0.)

	UMed1 = (P > DRY ? UMed1 + (1.0/6.0) * dt * (GRAVITYCOEFF * CHANNELSLOPE * P - 0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*UMed1/pow(P,2.0)) : 0.)
	VMed1 = (P > DRY ? VMed1 + (1.0/6.0) * dt * (-0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*VMed1/pow(P,2.0)) :0.)

	# update q2
	UMed2 = (1.0/25.0) * UMed2 + (9.0/25.0) * UMed1
	VMed2 = (1.0/25.0) * VMed2 + (9.0/25.0) * VMed1

	# update q1
	UMed1 = 15.0 * UMed2-5.0 * UMed1
    VMed1 = 15.0 * VMed2-5.0 * VMed1

    # stages 6 to 9
    UMed1 = (P > DRY ? UMed1 + (1.0/6.0) * dt * (GRAVITYCOEFF * CHANNELSLOPE * P - 0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*UMed1/pow(P,2.0)) : 0.)
	VMed1 = (P > DRY ? VMed1 + (1.0/6.0) * dt * (-0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*VMed1/pow(P,2.0)) :0.)

	UMed1 = (P > DRY ? UMed1 + (1.0/6.0) * dt * (GRAVITYCOEFF * CHANNELSLOPE * P - 0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*UMed1/pow(P,2.0)) : 0.)
	VMed1 = (P > DRY ? VMed1 + (1.0/6.0) * dt * (-0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*VMed1/pow(P,2.0)) :0.)

	UMed1 = (P > DRY ? UMed1 + (1.0/6.0) * dt * (GRAVITYCOEFF * CHANNELSLOPE * P - 0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*UMed1/pow(P,2.0)) : 0.)
	VMed1 = (P > DRY ? VMed1 + (1.0/6.0) * dt * (-0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*VMed1/pow(P,2.0)) :0.)

	UMed1 = (P > DRY ? UMed1 + (1.0/6.0) * dt * (GRAVITYCOEFF * CHANNELSLOPE * P - 0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*UMed1/pow(P,2.0)) : 0.)
	VMed1 = (P > DRY ? VMed1 + (1.0/6.0) * dt * (-0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*VMed1/pow(P,2.0)) :0.)

	# final stage
	U = P > DRY ? (UMed2 + (3.0/5.0) * UMed1 + (1.0/10.0) * dt * (GRAVITYCOEFF * CHANNELSLOPE * P - 0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*UMed1/pow(P,2.0))) : 0.
    V = P > DRY ? (VMed2 + (3.0/5.0) * VMed1 + (1.0/10.0) * dt * (-0.50*CF*pow((pow(UMed1,2.0)+pow(VMed1,2.0)),0.50)*VMed1/pow(P,2.0))) : 0.
    }

    AdvectionParams {
        gradient = gfs_gm_yu_gradient
        # gradient = gfs_center_sweby_gradient
        cfl = 0.25
        }

    # Refine 4
    Refine ((x<1.0) ? 9 : 6)
    AdaptGradient { istart = 1 istep = 1} {
       cmax = 0.55e-3
       cfactor = 2
       # cfactor = 4
       maxlevel = MAXLEVEL
       minlevel = MINLEVEL
    } P

    # AdaptError { istart = 1 istep = 1 end = 12.0 } { cmax = 3.0e-5 maxlevel = MAXLEVEL minlevel = MINLEVEL } P
    AdaptError { istart = 1 istep = 1 } { cmax = 6.35e-5 maxlevel = MAXLEVEL minlevel = MINLEVEL } P

      #(P < DRY ? 0. : P + Zb)

    OutputTime { istep = 10 } stderr
    # OutputSimulation { istep = 10 } stdout
    OutputSimulation { step = 1.0 } snapshot-%g.gfs { format = gfs variables = P }
    OutputSimulation { step = 4.0 } snapshotText-%g.txt {
        format = text
        variables = P
    }

    OutputSolidForce { istart = 1 istep = 1 } f

    OutputLocation { step = 2.00 } slice-%g gaugeLoc

} {
    dry = DRY
    scheme = kinetic
}

GfsBox {
pid = 0
left = Boundary {
    BcDirichlet P depth_bc(t)
    BcDirichlet U velocity_bc(t)
    BcDirichlet V 0.0
}
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 1th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 2th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 3th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 4th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 5th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 6th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 7th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 8th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 9th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 10th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 11th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 12th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 13th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 14th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 15th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 16th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 17th box above
GfsBox {
pid = 0
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 18th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 19th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 20th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 21th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 22th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 23th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 24th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 25th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 26th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 27th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 28th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 29th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 30th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 31th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 32th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 33th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 34th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 35th box above
GfsBox {
pid = 1
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 36th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 37th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 38th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 39th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 40th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 41th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 42th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 43th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 44th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 45th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 46th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 47th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 48th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 49th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 50th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 51th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 52th box above
GfsBox {
pid = 2
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# 53th box above
GfsBox {
pid = 3
right = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
top = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
bottom = Boundary {
    BcNeumann P 0.0
    BcNeumann U 0.0
    BcNeumann V 0.0
}
}
# last box above

1 2 right
2 3 right
3 4 right
4 5 right
5 6 right
6 7 right
7 8 right
8 9 right
9 10 right
10 11 right
11 12 right
12 13 right
13 14 right
14 15 right
15 16 right
16 17 right
17 18 right
18 19 right
19 20 right
20 21 right
21 22 right
22 23 right
23 24 right
24 25 right
25 26 right
26 27 right
27 28 right
28 29 right
29 30 right
30 31 right
31 32 right
32 33 right
33 34 right
34 35 right
35 36 right
36 37 right
37 38 right
38 39 right
39 40 right
40 41 right
41 42 right
42 43 right
43 44 right
44 45 right
45 46 right
46 47 right
47 48 right
48 49 right
49 50 right
50 51 right
51 52 right
52 53 right
53 54 right
